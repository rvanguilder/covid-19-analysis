#Paste this command in to a bash shell that includes the csv data files to view a high level summary of case and death statistics.

printf "\n\n\n\n" && cat us-states.csv | awk -F"," 'BEGIN{OFS="\t"}{a[$1];c[$1]+=$4;d[$1]+=$5}END{for (i in a)print i,c[i],d[i]}' | grep "2020-[0-9]\{2\}-[0-9]\{2\}" | sort | tail -n 20 > 0 && sed -i '1s/^/\t\tUnited States\n/' 0 && cat us-states.csv | grep $(cat us-states.csv | tail -n 1 | cut -d',' -f1) | awk -F"," '{print $1 "," $2 "," $4 "," $5}' | sort -t"," -k 3 -n -r | head -n 24 | cut -d',' -f2 | { j=0; waay_too_short=4; way_too_short=5; too_short=7; while read i; do let j=j+1; cat us-states.csv | awk -F"," -v state="$i" 'BEGIN{OFS="\t"}$2==state{a[$1];c[$1]+=$4;d[$1]+=$5}END{for (i in a)print i, c[i],d[i]}' | sort | cut -d$'\t' -f2,3 | tail -n 20 > $j; state_length=$(expr length "$i"); if [ "$state_length" -le "$too_short" ]; then i="$i "; fi; if [ "$state_length" -le "$way_too_short" ]; then i="$i  "; fi; if [ "$state_length" -le "$waay_too_short" ]; then i="$i  "; fi; sed -i '1s/^/'"$i"'\n/' $j; done; paste 0 1 2 3 4 5 6 7 8 9 10 11; printf "\n\n"; paste 12 13 14 15 16 17 18 19 20 21 22 23 24; } && printf "\n\n"

